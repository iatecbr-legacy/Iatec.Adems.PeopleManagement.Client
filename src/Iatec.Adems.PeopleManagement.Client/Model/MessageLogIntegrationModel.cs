/*
 * People Management API - BRA
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace Iatec.Adems.PeopleManagement.Client.Model
{
    /// <summary>
    /// MessageLogIntegrationModel
    /// </summary>
    [DataContract]
    public partial class MessageLogIntegrationModel : IEquatable<MessageLogIntegrationModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MessageLogIntegrationModel" /> class.
        /// </summary>
        /// <param name="ExternalReferenceId">ExternalReferenceId.</param>
        /// <param name="MessageType">MessageType.</param>
        /// <param name="Message">Message.</param>
        /// <param name="PeopleId">PeopleId.</param>
        /// <param name="EntityType">EntityType.</param>
        public MessageLogIntegrationModel(string ExternalReferenceId = default(string), MessageTypeModel MessageType = default(MessageTypeModel), string Message = default(string),
            Guid? PeopleId = default(Guid?), LogIntegrationEntityTypeModel EntityType = default(LogIntegrationEntityTypeModel))
        {
            this.ExternalReferenceId = ExternalReferenceId;
            this.MessageType = MessageType;
            this.Message = Message;
            this.PeopleId = PeopleId;
            this.EntityType = EntityType;
        }

        /// <summary>
        /// Gets or Sets ExternalReferenceId
        /// </summary>
        [DataMember(Name = "externalReferenceId", EmitDefaultValue = false)]
        public string ExternalReferenceId { get; set; }

        /// <summary>
        /// Gets or Sets MessageType
        /// </summary>
        [DataMember(Name = "messageType", EmitDefaultValue = false)]
        public MessageTypeModel MessageType { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name = "message", EmitDefaultValue = false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets PeopleId
        /// </summary>
        [DataMember(Name = "peopleId", EmitDefaultValue = false)]
        public Guid? PeopleId { get; set; }

        /// <summary>
        /// Gets or Sets EntityType
        /// </summary>
        [DataMember(Name = "entityType", EmitDefaultValue = false)]
        public LogIntegrationEntityTypeModel EntityType { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MessageLogIntegrationModel {\n");
            sb.Append("  ExternalReferenceId: ").Append(ExternalReferenceId).Append("\n");
            sb.Append("  MessageType: ").Append(MessageType).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  PeopleId: ").Append(PeopleId).Append("\n");
            sb.Append("  EntityType: ").Append(EntityType).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MessageLogIntegrationModel);
        }

        /// <summary>
        /// Returns true if MessageLogIntegrationModel instances are equal
        /// </summary>
        /// <param name="input">Instance of MessageLogIntegrationModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MessageLogIntegrationModel input)
        {
            if (input == null)
                return false;

            return
                (
                    this.ExternalReferenceId == input.ExternalReferenceId ||
                    (this.ExternalReferenceId != null &&
                    this.ExternalReferenceId.Equals(input.ExternalReferenceId))
                ) &&
                (
                    this.MessageType == input.MessageType ||
                    (this.MessageType != null &&
                    this.MessageType.Equals(input.MessageType))
                ) &&
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                ) &&
                (
                    this.PeopleId == input.PeopleId ||
                    (this.PeopleId != null &&
                    this.PeopleId.Equals(input.PeopleId))
                ) &&
                (
                    this.EntityType == input.EntityType ||
                    (this.EntityType != null &&
                    this.EntityType.Equals(input.EntityType))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ExternalReferenceId != null)
                    hashCode = hashCode * 59 + this.ExternalReferenceId.GetHashCode();
                if (this.MessageType != null)
                    hashCode = hashCode * 59 + this.MessageType.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                if (this.PeopleId != null)
                    hashCode = hashCode * 59 + this.PeopleId.GetHashCode();
                if (this.EntityType != null)
                    hashCode = hashCode * 59 + this.EntityType.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
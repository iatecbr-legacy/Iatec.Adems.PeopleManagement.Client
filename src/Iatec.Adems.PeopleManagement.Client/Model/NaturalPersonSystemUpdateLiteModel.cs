/*
 * People Management API - BRA
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace Iatec.Adems.PeopleManagement.Client.Model
{
    /// <summary>
    /// NaturalPersonSystemUpdateLiteModel
    /// </summary>
    [DataContract]
    public partial class NaturalPersonSystemUpdateLiteModel : IEquatable<NaturalPersonSystemUpdateLiteModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="NaturalPersonSystemUpdateLiteModel" /> class.
        /// </summary>
        /// <param name="EntityType">EntityType.</param>
        /// <param name="Id">Id.</param>
        /// <param name="LastUpdate">LastUpdate.</param>
        /// <param name="NaturalPersonId">NaturalPersonId.</param>
        public NaturalPersonSystemUpdateLiteModel(NaturalPersonEntityTypeModel EntityType = default(NaturalPersonEntityTypeModel), Guid Id = default(Guid), DateTime LastUpdate = default(DateTime), Guid NaturalPersonId = default(Guid))
        {
            this.EntityType = EntityType;
            this.Id = Id;
            this.LastUpdate = LastUpdate;
            this.NaturalPersonId = NaturalPersonId;
        }

        /// <summary>
        /// Gets or Sets EntityType
        /// </summary>
        [DataMember(Name = "entityType", EmitDefaultValue = false)]
        public NaturalPersonEntityTypeModel EntityType { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdate
        /// </summary>
        [DataMember(Name = "lastUpdate", EmitDefaultValue = false)]
        public DateTime LastUpdate { get; set; }

        /// <summary>
        /// Gets or Sets NaturalPersonId
        /// </summary>
        [DataMember(Name = "naturalPersonId", EmitDefaultValue = false)]
        public Guid NaturalPersonId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class NaturalPersonSystemUpdateLiteModel {\n");
            sb.Append("  EntityType: ").Append(EntityType).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  LastUpdate: ").Append(LastUpdate).Append("\n");
            sb.Append("  NaturalPersonId: ").Append(NaturalPersonId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as NaturalPersonSystemUpdateLiteModel);
        }

        /// <summary>
        /// Returns true if NaturalPersonSystemUpdateLiteModel instances are equal
        /// </summary>
        /// <param name="input">Instance of NaturalPersonSystemUpdateLiteModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(NaturalPersonSystemUpdateLiteModel input)
        {
            if (input == null)
                return false;

            return
                (
                    this.EntityType == input.EntityType ||
                    (this.EntityType != null &&
                    this.EntityType.Equals(input.EntityType))
                ) &&
                (
                    this.Id == input.Id ||
                    (this.Id != default(Guid) &&
                    this.Id.Equals(input.Id))
                ) &&
                (
                    this.LastUpdate == input.LastUpdate ||
                    (this.LastUpdate != null &&
                    this.LastUpdate.Equals(input.LastUpdate))
                ) &&
                (
                    this.NaturalPersonId == input.NaturalPersonId ||
                    (this.NaturalPersonId != default(Guid) &&
                    this.NaturalPersonId.Equals(input.NaturalPersonId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.EntityType != null)
                    hashCode = hashCode * 59 + this.EntityType.GetHashCode();
                if (this.Id != default(Guid))
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.LastUpdate != null)
                    hashCode = hashCode * 59 + this.LastUpdate.GetHashCode();
                if (this.NaturalPersonId != default(Guid))
                    hashCode = hashCode * 59 + this.NaturalPersonId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
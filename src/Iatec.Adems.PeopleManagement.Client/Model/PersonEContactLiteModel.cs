/*
 * People Management API - BRA
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.2.1
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;

namespace Iatec.Adems.PeopleManagement.Client.Model
{
    /// <summary>
    /// PersonEContactLiteModel
    /// </summary>
    [DataContract]
    public partial class PersonEContactLiteModel : IEquatable<PersonEContactLiteModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PersonEContactLiteModel" /> class.
        /// </summary>
        /// <param name="Id">Id.</param>
        /// <param name="Contact">Contact.</param>
        /// <param name="ContactType">ContactType.</param>
        /// <param name="DisplayAs">DisplayAs.</param>
        /// <param name="LastUpdate">LastUpdate.</param>
        /// <param name="PersonId">PersonId.</param>
        public PersonEContactLiteModel(Guid Id = default(Guid), string Contact = default(string), ContactTypeModel ContactType = default(ContactTypeModel), string DisplayAs = default(string), DateTime LastUpdate = default(DateTime), Guid PersonId = default(Guid))
        {
            this.Id = Id;
            this.Contact = Contact;
            this.ContactType = ContactType;
            this.DisplayAs = DisplayAs;
            this.LastUpdate = LastUpdate;
            this.PersonId = PersonId;
        }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public Guid Id { get; set; }

        /// <summary>
        /// Gets or Sets Contact
        /// </summary>
        [DataMember(Name = "contact", EmitDefaultValue = false)]
        public string Contact { get; set; }

        /// <summary>
        /// Gets or Sets ContactType
        /// </summary>
        [DataMember(Name = "contactType", EmitDefaultValue = false)]
        public ContactTypeModel ContactType { get; set; }

        /// <summary>
        /// Gets or Sets DisplayAs
        /// </summary>
        [DataMember(Name = "displayAs", EmitDefaultValue = false)]
        public string DisplayAs { get; set; }

        /// <summary>
        /// Gets or Sets LastUpdate
        /// </summary>
        [DataMember(Name = "lastUpdate", EmitDefaultValue = false)]
        public DateTime LastUpdate { get; set; }

        /// <summary>
        /// Gets or Sets PersonId
        /// </summary>
        [DataMember(Name = "personId", EmitDefaultValue = false)]
        public Guid PersonId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PersonEContactLiteModel {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Contact: ").Append(Contact).Append("\n");
            sb.Append("  ContactType: ").Append(ContactType).Append("\n");
            sb.Append("  DisplayAs: ").Append(DisplayAs).Append("\n");
            sb.Append("  LastUpdate: ").Append(LastUpdate).Append("\n");
            sb.Append("  PersonId: ").Append(PersonId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PersonEContactLiteModel);
        }

        /// <summary>
        /// Returns true if PersonEContactLiteModel instances are equal
        /// </summary>
        /// <param name="input">Instance of PersonEContactLiteModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PersonEContactLiteModel input)
        {
            if (input == null)
                return false;

            return
                (
                    this.Id == input.Id ||
                    (this.Id != default(Guid) &&
                    this.Id.Equals(input.Id))
                ) &&
                (
                    this.Contact == input.Contact ||
                    (this.Contact != null &&
                    this.Contact.Equals(input.Contact))
                ) &&
                (
                    this.ContactType == input.ContactType ||
                    (this.ContactType != null &&
                    this.ContactType.Equals(input.ContactType))
                ) &&
                (
                    this.DisplayAs == input.DisplayAs ||
                    (this.DisplayAs != null &&
                    this.DisplayAs.Equals(input.DisplayAs))
                ) &&
                (
                    this.LastUpdate == input.LastUpdate ||
                    (this.LastUpdate != null &&
                    this.LastUpdate.Equals(input.LastUpdate))
                ) &&
                (
                    this.PersonId == input.PersonId ||
                    (this.PersonId != default(Guid) &&
                    this.PersonId.Equals(input.PersonId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != default(Guid))
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Contact != null)
                    hashCode = hashCode * 59 + this.Contact.GetHashCode();
                if (this.ContactType != null)
                    hashCode = hashCode * 59 + this.ContactType.GetHashCode();
                if (this.DisplayAs != null)
                    hashCode = hashCode * 59 + this.DisplayAs.GetHashCode();
                if (this.LastUpdate != null)
                    hashCode = hashCode * 59 + this.LastUpdate.GetHashCode();
                if (this.PersonId != default(Guid))
                    hashCode = hashCode * 59 + this.PersonId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}